@page
@model Final_Project_G7.Pages.Contacts.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<head>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha384-FfS8aR5LUGAAgphWfuZ18tk8YYPLd7y5sR/08SueVX3pZ5XvApyI5N2tU7+89xS" crossorigin="anonymous">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa; /* Light gray background */
            color: #333;
        }

        header {
            background-color: #0e334f; /* Primary blue color */
            color: white;
            padding: 20px;
            text-align: center;
        }
        h1 {
            font-size: 2.5rem;
            color: #154c79;
        }

        .btn-secondary {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
        }

        .btn-third {
            background-color: #28a745;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
        }
    </style>
</head>




<div>
    <br />
    <hr />
    <h1>Details</h1>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Contact.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Contact.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Contact.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Contact.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Contact.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Contact.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Contact.State)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Contact.State)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Contact.Zip)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Contact.Zip)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Contact.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Contact.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Contact.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Contact.Status)
        </dd>
    </dl>
</div>
@if (Model.Contact.Status != ContactStatus.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(
     User, Model.Contact, ContactOperations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Contact.ContactId" />
            <input type="hidden" name="status" value="@ContactStatus.Approved" />
            <button type="submit" class="btn btn-xs btn-success">Approve</button>
        </form>
    }
}

@if (Model.Contact.Status != ContactStatus.Rejected)
{
    @if ((await AuthorizationService.AuthorizeAsync(
     User, Model.Contact, ContactOperations.Reject)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Contact.ContactId" />
            <input type="hidden" name="status" value="@ContactStatus.Rejected" />
            <button type="submit" class="btn btn-xs btn-danger">Reject</button>
        </form>
    }
}

<div>
    <br>
    @if ((await AuthorizationService.AuthorizeAsync(
         User, Model.Contact,
         ContactOperations.Update)).Succeeded)
    {
        <a asp-page="./Edit" class="btn btn-third" asp-route-id="@Model.Contact.ContactId">Edit</a>
        <text> | </text>
    }
    <a asp-page="./Index" class="btn btn-secondary">Back to List</a>
</div>
